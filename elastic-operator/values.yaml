# Main configuration for the elastic-operator chart

# Install CRDs
installCRDs: true

# Operator configuration
operator:
  enabled: false
  managedNamespaces: ["elastic-system"]  # Specific namespace
  createClusterScopedResources: true
  config:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      runAsNonRoot: true
      runAsUser: 1000
    logVerbosity: "0"
    metricsPort: 8080
    metrics:
      container:
        port: 8080
      service:
        enabled: true
        type: ClusterIP
      serviceMonitor:
        enabled: true
        namespace: monitoring
        interval: 30s
        scrapeTimeout: 10s
        labels:
          release: prometheus
  webhook:
    enabled: true
    manageCerts: true
    certValidityDuration: 8760h
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  resources:
    limits:
      cpu: "1"
      memory: "1Gi"
    requests:
      cpu: "100m"
      memory: "250Mi"
  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: elastic-operator

# Elasticsearch cluster configuration
elasticsearch:
  enabled: true
  name: elasticsearch-cluster
  version: "8.11.1"
  
  # Authentication configuration
  auth:
    roles:
      - name: admin
        rules:
          - resources: ["all"]
            privileges: ["all"]
            indices: ["*"]
    users:
      - name: elastic
        password: elastic
        roles: ["admin"]
  
  # Pod Distribution and HA configuration
  podDisruptionBudget:
    enabled: true
    minAvailable: 2

  # Default pod template configuration
  podTemplate:
    spec:
      # System settings and performance tuning
      initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  elasticsearch.k8s.elastic.co/cluster: elasticsearch-cluster
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "topology.kubernetes.io/zone"
                    operator: Exists

  # JVM and Heap configuration
  jvm:
    heap:
      min: "2g"
      max: "2g"  # Will be adjusted per node type
    options: >-
      -XX:+UseG1GC
      -XX:G1ReservePercent=25
      -XX:InitiatingHeapOccupancyPercent=30
      -XX:+HeapDumpOnOutOfMemoryError
      -XX:HeapDumpPath=/usr/share/elasticsearch/data/heap-dump.hprof
      -Dlog4j2.formatMsgNoLookups=true

  # Monitoring configuration
  monitoring:
    metrics:
      enabled: true
      prometheus:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: monitoring
          interval: 30s
          scrapeTimeout: 10s
          labels:
            release: prometheus
          metricsets:
            - node
            - cluster
            - index
            - jvm
            - http
            - thread_pool
    logs:
      enabled: true
      elasticsearch:
        enabled: true
  # Security settings
  security:
    tls:
      enabled: true
      selfSignedCertificate:
        disabled: false
  # Index Lifecycle Management
  ilm:
    enabled: true
    policies:
      policy:
        hot:
          maxSize: "50GB"
          maxAge: "30d"
        warm:
          maxAge: "90d"
        cold:
          maxAge: "180d"
        delete:
          enabled: true
          minAge: "15d"

  # Network Policies
  networkPolicies:
    enabled: true
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                name: elastic-system
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: kibana

  nodeSets:
    masters:
      count: 3
      roles: ["master"]
      config:
        # Performance tuning
        bootstrap.memory_lock: true
        processors: ${PROCESSORS:1}
        thread_pool.write.queue_size: 1000
        indices.memory.index_buffer_size: 30%
        indices.queries.cache.size: 20%
        search.max_buckets: 100000
      resources:
        requests:
          memory: 1Gi
          cpu: "0.5"
        limits:
          memory: 1Gi
          cpu: "0.5"
      jvm:
        heap:
          min: "512m"
          max: "1g"
      podTemplate:
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/node-master: "true"
                  topologyKey: "topology.kubernetes.io/zone"
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "topology.kubernetes.io/zone"
                        operator: In
                        values:
                          - eu-west-1a
                          - eu-west-1b
                          - eu-west-1c
                      - key: "topology.kubernetes.io/region"
                        operator: In
                        values:
                          - eu-west-1
      storage:
        size: 100Gi
        storageClassName: gp2
    
    data:
      count: 3
      roles: ["data", "search"]
      config:
        # Performance tuning for data nodes
        bootstrap.memory_lock: true
        processors: ${PROCESSORS:1}
        thread_pool.write.queue_size: 2000
        thread_pool.search.queue_size: 2000
        indices.memory.index_buffer_size: 50%
        indices.fielddata.cache.size: 30%
        indices.recovery.max_bytes_per_sec: 100mb
        indices.queries.cache.size: 35%
      resources:
        requests:
          memory: 2Gi
          cpu: "1"
        limits:
          memory: 2Gi
          cpu: "1"
      jvm:
        heap:
          min: "1g"   # 50% of memory
          max: "1g"
      podTemplate:
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/node-data: "true"
                  topologyKey: "topology.kubernetes.io/zone"
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "topology.kubernetes.io/zone"
                        operator: In
                        values:
                          - eu-west-1a
                          - eu-west-1b
                          - eu-west-1c
                      - key: "topology.kubernetes.io/region"
                        operator: In
                        values:
                          - eu-west-1
      storage:
        size: 1Ti
        storageClassName: gp2
    
    ingest:
      count: 2
      roles: ["ingest"]
      resources:
        requests:
          memory: 1Gi
          cpu: "500m"
        limits:
          memory: 1Gi
          cpu: "500m"
      podTemplate:
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/node-ingest: "true"
                  topologyKey: "topology.kubernetes.io/zone"
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "topology.kubernetes.io/zone"
                        operator: In
                        values:
                          - eu-west-1a
                          - eu-west-1b
                          - eu-west-1c
                      - key: "topology.kubernetes.io/region"
                        operator: In
                        values:
                          - eu-west-1
      storage:
        size: 100Gi
        storageClassName: gp2
    
    coordinating:
      count: 2
      roles: []
      resources:
        requests:
          memory: 1Gi
          cpu: "500m"
        limits:
          memory: 1Gi
          cpu: "500m"
      podTemplate:
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/node-coordinating: "true"
                  topologyKey: "topology.kubernetes.io/zone"
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "topology.kubernetes.io/zone"
                        operator: In
                        values:
                          - eu-west-1a
                          - eu-west-1b
                          - eu-west-1c
                      - key: "topology.kubernetes.io/region"
                        operator: In
                        values:
                          - eu-west-1
  
  tls:
    enabled: true
    selfSignedCertificate:
      disabled: false
  
  service:
    type: ClusterIP

# Kibana configuration
kibana:
  enabled: true
  name: kibana
  version: "8.11.1"
  count: 1
  # Authentication configuration
  auth:
    username: kibana
    password: kibana
  # Security settings
  security:
    tls:
      enabled: true
  resources:
    requests:
      memory: 1Gi
      cpu: "1"
    limits:
      memory: 2Gi
      cpu: "2"
  service:
    type: ClusterIP

# Filebeat configuration
filebeat:
  enabled: true
  name: filebeat
  version: "8.11.1"
  # Reference to Elasticsearch for ILM
  elasticsearchRef:
    name: elasticsearch-cluster
  
  # Template configuration
  template:
    name: "filebeat"
    pattern: "filebeat-*"
  
  # ILM settings
  ilm:
    enabled: true
    policy_name: "hot-warm-cold-policy"
  
  # Output configuration
  output:
    elasticsearch:
      index: "filebeat-%{+yyyy.MM.dd}"
      pipeline: "filebeat"
  
  # Input configuration
  input:
    container:
      type: "container"
      paths:
        - "/var/log/containers/*.log"
  daemonSet:
    resources:
      requests:
        memory: 512Mi
        cpu: "0.5"
      limits:
        memory: 1Gi
        cpu: "1"
