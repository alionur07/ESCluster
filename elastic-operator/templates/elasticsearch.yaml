{{- if .Values.elasticsearch.enabled }}
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ .Values.elasticsearch.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "elastic-operator.labels" . | nindent 4 }}
spec:
  version: {{ .Values.elasticsearch.version }}
  
  # Pod Disruption Budget
  {{- if .Values.elasticsearch.podDisruptionBudget.enabled }}
  podDisruptionBudget:
    spec:
      minAvailable: {{ .Values.elasticsearch.podDisruptionBudget.minAvailable }}
  {{- end }}

  # Network Policies
  {{- if .Values.elasticsearch.networkPolicies.enabled }}
  networkPolicies:
    {{- toYaml .Values.elasticsearch.networkPolicies | nindent 4 }}
  {{- end }}

  # Auth configuration
  auth:
    {{- with .Values.elasticsearch.auth }}
    roles:
    {{- range .roles }}
    - name: {{ .name }}
      rules:
      {{- range .rules }}
      - resources: {{ .resources | toJson }}
        privileges: {{ .privileges | toJson }}
        {{- if .indices }}
        indices: {{ .indices | toJson }}
        {{- end }}
      {{- end }}
    {{- end }}
    users:
    {{- range .users }}
    - name: {{ .name }}
      password: {{ .password }}
      roles: {{ .roles | toJson }}
    {{- end }}
    {{- end }}
  security:
    {{- with .Values.elasticsearch.security }}
    tls:
      enabled: {{ .tls.enabled }}
      selfSignedCertificate:
        disabled: {{ .tls.selfSignedCertificate.disabled }}
    {{- end }}
  nodeSets:
    # Master nodes
    - name: masters
      count: {{ .Values.elasticsearch.nodeSets.masters.count }}
      config:
        node.roles: {{ .Values.elasticsearch.nodeSets.masters.roles | toJson }}
      podTemplate:
        metadata:
          annotations:
            traffic.sidecar.istio.io/excludeOutboundPorts: "9300"
            traffic.sidecar.istio.io/excludeInboundPorts: "9300"
        spec:
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
              command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
          containers:
          - name: elasticsearch
            env:
              - name: ES_JAVA_OPTS
                value: "-Xms{{ .Values.elasticsearch.nodeSets.masters.jvm.heap.min }} -Xmx{{ .Values.elasticsearch.nodeSets.masters.jvm.heap.max }}"
            resources:
              {{- toYaml .Values.elasticsearch.nodeSets.masters.resources | nindent 14 }}
          {{- if .Values.elasticsearch.nodeSets.masters.nodeSelector }}
          nodeSelector:
            {{- toYaml .Values.elasticsearch.nodeSets.masters.nodeSelector | nindent 12 }}
          {{- end }}
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.elasticsearch.nodeSets.masters.storage.size }}
          storageClassName: {{ .Values.elasticsearch.nodeSets.masters.storage.storageClassName }}

    # Data nodes
    - name: data
      count: {{ .Values.elasticsearch.nodeSets.data.count }}
      config:
        node.roles: {{ .Values.elasticsearch.nodeSets.data.roles | toJson }}
      podTemplate:
        spec:
          containers:
          - name: elasticsearch
            resources:
              {{- toYaml .Values.elasticsearch.nodeSets.data.resources | nindent 14 }}
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.elasticsearch.nodeSets.data.storage.size }}
          storageClassName: {{ .Values.elasticsearch.nodeSets.data.storage.storageClassName }}

    # Ingest nodes
    - name: ingest
      count: {{ .Values.elasticsearch.nodeSets.ingest.count }}
      config:
        node.roles: {{ .Values.elasticsearch.nodeSets.ingest.roles | toJson }}
      podTemplate:
        spec:
          containers:
          - name: elasticsearch
            resources:
              {{- toYaml .Values.elasticsearch.nodeSets.ingest.resources | nindent 14 }}
      volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.elasticsearch.nodeSets.ingest.storage.size }}
          storageClassName: {{ .Values.elasticsearch.nodeSets.ingest.storage.storageClassName }}

    # Coordinating nodes
    - name: coordinating
      count: {{ .Values.elasticsearch.nodeSets.coordinating.count }}
      config:
        node.roles: {{ .Values.elasticsearch.nodeSets.coordinating.roles | toJson }}
      podTemplate:
        spec:
          containers:
          - name: elasticsearch
            resources:
              {{- toYaml .Values.elasticsearch.nodeSets.coordinating.resources | nindent 14 }}

  http:
    tls:
      selfSignedCertificate:
        disabled: {{ not .Values.elasticsearch.tls.enabled }}
    service:
      spec:
        type: {{ .Values.elasticsearch.service.type }}

  transport:
    service:
      spec:
        type: {{ .Values.elasticsearch.service.type }}
{{- end }}
