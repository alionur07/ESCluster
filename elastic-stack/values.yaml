# Monitoring configuration
monitoring:
  enabled: true
  namespace: monitoring
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: "30s"
      scrapeTimeout: "10s"
      namespace: monitoring
      labels:
        release: prometheus

  # Elasticsearch cluster configuration
elasticsearch:
  enabled: true
  name: elasticsearch-cluster
  version: "8.12.1"

  # Service configuration
  service:
    type: ClusterIP
    # TLS configuration
  tls:
    enabled: true
    selfSignedCertificate:
      disabled: false
  
  # Authentication configuration
  auth:
    roles:
      - name: admin
        rules:
          - resources: ["all"]
            privileges: ["all"]
            indices: ["*"]
    users:
      - name: elastic
        password: elastic
        roles: ["admin"]
  
  # Pod Distribution and HA configuration
  podDisruptionBudget:
    enabled: true
    minAvailable: 2

  # Network Policies configuration
  networkPolicies:
    enabled: false

  # ILM Configuration
  ilm:
    enabled: true
    policies:
      - name: hot-warm-cold-policy
        body:
          hot:
            min_age: "0ms"
            actions:
              rollover:
                max_size: "50GB"
                max_age: "30d"
          warm:
            min_age: "30d"
            actions: {}
          cold:
            min_age: "60d"
            actions: {}
          delete:
            min_age: "90d"
            actions:
              delete: {}

  # Node configurations
  nodeSets:
    masters:
      count: 3
      roles: ["master"]
      config:
        xpack.ml.enabled: false
        bootstrap.memory_lock: true
        thread_pool.write.queue_size: 1000
      storage:
        size: "10Gi"
        storageClassName: "gp2"
      podTemplate:
        spec:
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
              command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
          containers:
            - name: elasticsearch
              env:
                - name: ES_JAVA_OPTS
                  value: "-Xms2g -Xmx2g"
              resources:
                requests:
                  memory: "4Gi"
                  cpu: "1000m"
                limits:
                  memory: "4Gi"
                  cpu: "2000m"
          securityContext:
            runAsUser: 1000
            fsGroup: 1000
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/cluster: elasticsearch-cluster
                  topologyKey: "kubernetes.io/hostname"
          volumeClaimTemplates:
            - metadata:
                name: elasticsearch-data
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 10Gi
                storageClassName: gp2

    # Data nodes - Store and handle data operations
    data:
      count: 3
      roles: ["data", "ingest"]
      config:
        xpack.ml.enabled: true
        bootstrap.memory_lock: true
        thread_pool.write.queue_size: 2000
        thread_pool.search.queue_size: 2000
      storage:
        size: "100Gi"
        storageClassName: "gp2"
      podTemplate:
        spec:
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
              command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: "6Gi"
                  cpu: "2000m"
                limits:
                  memory: "6Gi"
                  cpu: "3000m"
              env:
                - name: ES_JAVA_OPTS
                  value: "-Xms3g -Xmx3g"

    ingest:
      count: 2
      roles: ["ingest"]
      config:
        xpack.ml.enabled: false
        bootstrap.memory_lock: true
        indices.memory.index_buffer_size: 50%
        indices.fielddata.cache.size: 30%
        indices.recovery.max_bytes_per_sec: 100mb
        indices.queries.cache.size: 35%
      storage:
        size: "20Gi"
        storageClassName: "gp2"
      podTemplate:
        spec:
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
              command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: "3Gi"
                  cpu: "1000m"
                limits:
                  memory: "3Gi"
                  cpu: "2000m"
              env:
                - name: ES_JAVA_OPTS
                  value: "-Xms1536m -Xmx1536m"
          securityContext:
            runAsUser: 1000
            fsGroup: 1000
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/cluster: elasticsearch-cluster
                  topologyKey: "kubernetes.io/hostname"


    # Coordinating nodes - Handle search requests and distribute bulk indexing
    coordinating:
      count: 2
      roles: []  # Empty roles list makes it a coordinating-only node
      config:
        xpack.ml.enabled: false
        bootstrap.memory_lock: true
        thread_pool.write.queue_size: 1000
      podTemplate:
        spec:
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
              command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: "3Gi"
                  cpu: "1000m"
                limits:
                  memory: "3Gi"
                  cpu: "2000m"
              env:
                - name: ES_JAVA_OPTS
                  value: "-Xms1536m -Xmx1536m"
          securityContext:
            runAsUser: 1000
            fsGroup: 1000
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/cluster: elasticsearch-cluster
                  topologyKey: "kubernetes.io/hostname"

  # Monitoring configuration
  monitoring:
    metrics:
      enabled: true
      prometheusExporter:
        enabled: true
        image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 25m
            memory: 64Mi
        env:
          - name: ES_URI
            value: https://localhost:9200
          - name: ES_SSL_SKIP_VERIFY
            value: "true"
          - name: ES_USERNAME
            valueFrom:
              secretKeyRef:
                name: elasticsearch-cluster-es-elastic-user
                key: elastic
          - name: ES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-cluster-es-elastic-user
                key: elastic
      prometheus:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: monitoring
          interval: 30s
          scrapeTimeout: 10s
          labels:
            release: prometheus

# Kibana configuration
kibana:
  enabled: true
  name: kibana
  version: "8.12.1"
  count: 1
  auth:
    username: kibana
    password: kibana
  security:
    tls:
      enabled: true
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  service:
    type: ClusterIP

# Filebeat configuration
filebeat:
  enabled: true
  name: filebeat
  version: "8.11.1"
  daemonSet:
    resources:
      requests:
        memory: "200Mi"
        cpu: "100m"
      limits:
        memory: "500Mi"
        cpu: "500m"
  podTemplate:
    spec:
      serviceAccount: filebeat
      automountServiceAccountToken: true
      securityContext:
        runAsUser: 0
        privileged: true
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        data:
          hostPath:
            path: /var/lib/filebeat-data
            type: DirectoryOrCreate
        containerLogs:
          hostPath:
            path: /var/lib/docker/containers
        systemLogs:
          hostPath:
            path: /var/log
      volumeMounts:
        data:
          name: data
          mountPath: /usr/share/filebeat/data
        containerLogs:
          name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        systemLogs:
          name: varlog
          mountPath: /var/log
          readOnly: true
  config:
    filebeat:
      inputs:
        - type: container
          paths:
            - /var/log/containers/*.log

    processors:
      - add_cloud_metadata: {}
      - add_host_metadata: {}
    setup:
      template:
        name: "filebeat"
        pattern: "filebeat-%{+yyyy.MM.dd}"
      ilm:
        enabled: true
        rollover_alias: "filebeat-%{+yyyy.MM.dd}"
    output:
      elasticsearch:
        hosts: ["https://elasticsearch-cluster-es-http:9200"]
        ssl.verification_mode: "none"